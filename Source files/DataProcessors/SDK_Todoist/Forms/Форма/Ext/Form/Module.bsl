&НаКлиенте
Функция МассивВСтроку(Массив)
	МассивСтрокой = "";
	Для Каждого Стр Из Массив Цикл
		Если ПустаяСтрока(МассивСтрокой) Тогда
			МассивСтрокой = СтрЗаменить(Строка(Стр),",","");
		Иначе
			МассивСтрокой = МассивСтрокой + "," + СтрЗаменить(Строка(Стр),",","");
		КонецЕсли;
	КонецЦикла;
	Возврат МассивСтрокой;
КонецФункции

&НаКлиенте
Функция УстановитьПараметры(Ресурс,ПараметрыРесурса)
	Ресурс = Ресурс + "?";
	Для Каждого Стр Из ПараметрыРесурса Цикл
		Ресурс = Ресурс + "&" + Стр.Ключ + "=" + Стр.Значение;
	КонецЦикла;
	Возврат Ресурс;
КонецФункции

&НаКлиенте
Процедура ПолучитьВсеЗадачи(Команда)
	Хост = "api.todoist.com";
	Ресурс = "/rest/v1/tasks";
	ЗС = Новый ЗащищенноеСоединениеOpenSSL;
	Заголовки = Новый Соответствие;
	Заголовки.Вставить("Authorization","Bearer "+Объект.Токен);
	HTTPСоединение = Новый HTTPСоединение(Хост,,,,,,ЗС);
	HTTPЗапрос = Новый HTTPЗапрос(Ресурс,Заголовки);
	Результат = HTTPСоединение.Получить(HTTPЗапрос);
	КодОтвета = Результат.КодСостояния;
	Ответ = Результат.ПолучитьТелоКакСтроку(КодировкаТекста.UTF8);
	ЧтениеJSON = Новый ЧтениеJSON;
	ЧтениеJSON.УстановитьСтроку(Ответ);
	ВсеЗадачиМассив = ПрочитатьJSON(ЧтениеJSON);
	ЧтениеJSON.Закрыть();
	ВсеЗадачи.Очистить();
	Для Каждого Задача Из ВсеЗадачиМассив Цикл
		ТЧ = ВсеЗадачи.Добавить();
		ТЧ.id = СтрЗаменить(Строка(Задача.id),",","");
		ТЧ.assigner = СтрЗаменить(Строка(Задача.assigner),",","");
		ТЧ.project_id = СтрЗаменить(Строка(Задача.project_id),",","");
		ТЧ.section_id = СтрЗаменить(Строка(Задача.section_id),",","");
		ТЧ.order = СтрЗаменить(Строка(Задача.order),",","");
		ТЧ.content = Строка(Задача.content);
		ТЧ.description = Строка(Задача.description);
		ТЧ.completed = Строка(Задача.completed);
		ТЧ.label_ids = МассивВСтроку(Задача.label_ids);
		ТЧ.priority = СтрЗаменить(Строка(Задача.priority),",","");
		ТЧ.comment_count = СтрЗаменить(Строка(Задача.comment_count),",","");
		ТЧ.creator = СтрЗаменить(Строка(Задача.creator),",","");
		ТЧ.created = Строка(Задача.created);
		ТЧ.url = Строка(Задача.url);
		Попытка
			ТЧ.due_date = Строка(Задача.due.date);
			ТЧ.due_string = Строка(Задача.due.string);
			ТЧ.due_lang = Строка(Задача.due.lang);
			ТЧ.due_recurring = Строка(Задача.due.recurring);
		Исключение
			//
		КонецПопытки;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьВсеПроекты(Команда)
	Хост = "api.todoist.com";
	Ресурс = "/rest/v1/projects";
	ЗС = Новый ЗащищенноеСоединениеOpenSSL;
	Заголовки = Новый Соответствие;
	Заголовки.Вставить("Authorization","Bearer "+Объект.Токен);
	HTTPСоединение = Новый HTTPСоединение(Хост,,,,,,ЗС);
	HTTPЗапрос = Новый HTTPЗапрос(Ресурс,Заголовки);
	Результат = HTTPСоединение.Получить(HTTPЗапрос);
	КодОтвета = Результат.КодСостояния;
	Ответ = Результат.ПолучитьТелоКакСтроку(КодировкаТекста.UTF8);
	ЧтениеJSON = Новый ЧтениеJSON;
	ЧтениеJSON.УстановитьСтроку(Ответ);
	ВсеПроектыМассив = ПрочитатьJSON(ЧтениеJSON);
	ЧтениеJSON.Закрыть();
	ВсеПроекты.Очистить();
	Для Каждого Проект Из ВсеПроектыМассив Цикл
		ТЧ = ВсеПроекты.Добавить();
        ТЧ.id = СтрЗаменить(Строка(Проект.id),",","");
		ТЧ.color = СтрЗаменить(Строка(Проект.color),",","");
		ТЧ.name = Строка(Проект.name);
		ТЧ.comment_count = СтрЗаменить(Строка(Проект.comment_count),",","");
		ТЧ.shared = Строка(Проект.shared);
		ТЧ.favorite = Строка(Проект.favorite);
		ТЧ.sync_id = СтрЗаменить(Строка(Проект.sync_id),",","");;
		Попытка
			ТЧ.inbox_project = Строка(Проект.inbox_project);
		Исключение
			//
		КонецПопытки;
		ТЧ.url = Строка(Проект.url);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьВсеМетки(Команда)
	Хост = "api.todoist.com";
	Ресурс = "/rest/v1/labels";
	ЗС = Новый ЗащищенноеСоединениеOpenSSL;
	Заголовки = Новый Соответствие;
	Заголовки.Вставить("Authorization","Bearer "+Объект.Токен);
	HTTPСоединение = Новый HTTPСоединение(Хост,,,,,,ЗС);
	HTTPЗапрос = Новый HTTPЗапрос(Ресурс,Заголовки);
	Результат = HTTPСоединение.Получить(HTTPЗапрос);
	КодОтвета = Результат.КодСостояния;
	Ответ = Результат.ПолучитьТелоКакСтроку(КодировкаТекста.UTF8);
	ЧтениеJSON = Новый ЧтениеJSON;
	ЧтениеJSON.УстановитьСтроку(Ответ);
	ВсеМеткиМассив = ПрочитатьJSON(ЧтениеJSON);
	ЧтениеJSON.Закрыть();
	ВсеМетки.Очистить();
	Для Каждого Метка Из ВсеМеткиМассив Цикл
		ТЧ = ВсеМетки.Добавить();
		ТЧ.id = СтрЗаменить(Строка(Метка.id),",","");
		ТЧ.name = Строка(Метка.name);
		ТЧ.order = СтрЗаменить(Строка(Метка.order),",","");
		ТЧ.color = СтрЗаменить(Строка(Метка.color),",","");
		ТЧ.favorite = Строка(Метка.favorite);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура СоздатьЗадачу(Команда)
	Хост = "api.todoist.com";
	Ресурс = "/rest/v1/tasks";
	//
	ПараметрыРесурса = Новый Структура;
	ПараметрыРесурса.Вставить("content","Название задачи");
	//
	Ресурс = УстановитьПараметры(Ресурс,ПараметрыРесурса);
	//
	ЗС = Новый ЗащищенноеСоединениеOpenSSL;
	Заголовки = Новый Соответствие;
	Заголовки.Вставить("Authorization","Bearer "+Объект.Токен);
	HTTPСоединение = Новый HTTPСоединение(Хост,,,,,,ЗС);
	HTTPЗапрос = Новый HTTPЗапрос(Ресурс,Заголовки);
	Результат = HTTPСоединение.ОтправитьДляОбработки(HTTPЗапрос);
	КодОтвета = Результат.КодСостояния;
	Ответ = Результат.ПолучитьТелоКакСтроку(КодировкаТекста.UTF8);
	ЧтениеJSON = Новый ЧтениеJSON;
	ЧтениеJSON.УстановитьСтроку(Ответ);
	Задача = ПрочитатьJSON(ЧтениеJSON);
	ЧтениеJSON.Закрыть();
	ТЧ = ВсеЗадачи.Добавить();
	ТЧ.id = СтрЗаменить(Строка(Задача.id),",","");
	ТЧ.assigner = СтрЗаменить(Строка(Задача.assigner),",","");
	ТЧ.project_id = СтрЗаменить(Строка(Задача.project_id),",","");
	ТЧ.section_id = СтрЗаменить(Строка(Задача.section_id),",","");
	ТЧ.order = СтрЗаменить(Строка(Задача.order),",","");
	ТЧ.content = Строка(Задача.content);
	ТЧ.description = Строка(Задача.description);
	ТЧ.completed = Строка(Задача.completed);
	ТЧ.label_ids = МассивВСтроку(Задача.label_ids);
	ТЧ.priority = СтрЗаменить(Строка(Задача.priority),",","");
	ТЧ.comment_count = СтрЗаменить(Строка(Задача.comment_count),",","");
	ТЧ.creator = СтрЗаменить(Строка(Задача.creator),",","");
	ТЧ.created = Строка(Задача.created);
	ТЧ.url = Строка(Задача.url);
	Попытка
		ТЧ.due_date = Строка(Задача.due.date);
		ТЧ.due_string = Строка(Задача.due.string);
		ТЧ.due_lang = Строка(Задача.due.lang);
		ТЧ.due_recurring = Строка(Задача.due.recurring);
	Исключение
		//
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПроект(Команда)
	Хост = "api.todoist.com";
	Ресурс = "/rest/v1/projects";
	//
	ПараметрыРесурса = Новый Структура;
	ПараметрыРесурса.Вставить("name","Создан из 1С");
	//ID	Name	        Hexadecimal 	    ID	Name	        Hexadecimal
	//30 	berry_red 		#b8256f		// 		40 	light_blue 		#96c3eb
	//31 	red 			#db4035 	//		41 	blue 			#4073ff
	//32 	orange 			#ff9933		// 		42 	grape 			#884dff
	//33 	yellow 			#fad000 	//		43 	violet 			#af38eb
	//34 	olive_green 	#afb83b 	//		44 	lavender 		#eb96eb
	//35 	lime_green 		#7ecc49 	//		45 	magenta 		#e05194
	//36 	green 			#299438 	//		46 	salmon 			#ff8d85
	//37 	mint_green 		#6accbc 	//		47 	charcoal 		#808080
	//38 	teal 			#158fad 	//		48 	grey 			#b8b8b8
	//39 	sky_blue 		#14aaf5 	//		49 	taupe 			#ccac93
	ПараметрыРесурса.Вставить("color","32");
	//
	Ресурс = УстановитьПараметры(Ресурс,ПараметрыРесурса);
	//
	ЗС = Новый ЗащищенноеСоединениеOpenSSL;
	Заголовки = Новый Соответствие;
	Заголовки.Вставить("Authorization","Bearer "+Объект.Токен);
	HTTPСоединение = Новый HTTPСоединение(Хост,,,,,,ЗС);
	HTTPЗапрос = Новый HTTPЗапрос(Ресурс,Заголовки);
	Результат = HTTPСоединение.ОтправитьДляОбработки(HTTPЗапрос);
	КодОтвета = Результат.КодСостояния;
	Ответ = Результат.ПолучитьТелоКакСтроку(КодировкаТекста.UTF8);
	ЧтениеJSON = Новый ЧтениеJSON;
	ЧтениеJSON.УстановитьСтроку(Ответ);
	Проект = ПрочитатьJSON(ЧтениеJSON);
	ЧтениеJSON.Закрыть();
	ТЧ = ВсеПроекты.Добавить();
    ТЧ.id = СтрЗаменить(Строка(Проект.id),",","");
	ТЧ.color = СтрЗаменить(Строка(Проект.color),",","");
	ТЧ.name = Строка(Проект.name);
	ТЧ.comment_count = СтрЗаменить(Строка(Проект.comment_count),",","");
	ТЧ.shared = Строка(Проект.shared);
	ТЧ.favorite = Строка(Проект.favorite);
	ТЧ.sync_id = СтрЗаменить(Строка(Проект.sync_id),",","");;
	Попытка
		ТЧ.inbox_project = Строка(Проект.inbox_project);
	Исключение
		//
	КонецПопытки;
	ТЧ.url = Строка(Проект.url);
КонецПроцедуры

