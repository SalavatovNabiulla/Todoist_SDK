//Локальные функции 
Функция ВставитьПараметры(Адрес,Параметры)
	Адрес = Адрес + "?";
	Для Каждого Стр Из Параметры Цикл
		Адрес = Адрес + "&" + Стр.Ключ + "=" + Стр.Значение;
	КонецЦикла;
	Возврат Адрес;
КонецФункции
//
Функция ПолучитьСоединение()
	ЗС = Новый ЗащищенноеСоединениеOpenSSL();
	HTTPСоединение = Новый HTTPСоединение("api.todoist.com",,,,,,ЗС,);
	Возврат HTTPСоединение;	
КонецФункции
//
Функция ПолучитьЗаголовки()
	Заголовки = Новый Соответствие;
	Заголовки.Вставить("Authorization","Bearer "+Todoist_Сервер.ПолучитьТокенТекущегоПользователя());
	Заголовки.Вставить("Content-Type","application/json");
	Возврат Заголовки;
КонецФункции
//
Функция ОбработатьОтвет(Ответ)
	Если Ответ.КодСостояния = 200 Или Ответ.КодСостояния = 204 Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
КонецФункции
//
Функция ОбработатьИдентификатор(Идентификатор)
	Если Идентификатор <> Неопределено Тогда
		Врем = Строка(Идентификатор);
		Врем = СтрЗаменить(Врем,",","");
		Врем = СтрЗаменить(Врем,".","");
		Врем = СтрЗаменить(Врем,"'","");
		Возврат Врем;
	Иначе
		Возврат Идентификатор;
	КонецЕсли;
КонецФункции
//
Функция ПолучитьJSONФайл(ДанныеТела)
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла("json");
	ЗаписьJSON = Новый ЗаписьJSON; 
	ЗаписьJSON.ОткрытьФайл(ИмяВременногоФайла);
	ЗаписатьJSON(ЗаписьJSON, ДанныеТела,Новый НастройкиСериализацииJSON); 
	ЗаписьJSON.Закрыть();
	Возврат ИмяВременногоФайла;
КонецФункции
//

//Глобальные функции

///Проекты
Функция ПолучитьСписокВсехПроектов()  Экспорт
	HTTPСоединение = ПолучитьСоединение();
	Адрес = "/rest/v2/projects";
	//
	Параметры = Новый Структура;
	//
	HTTPЗапрос = Новый HTTPЗапрос(ВставитьПараметры(Адрес,Параметры),ПолучитьЗаголовки());
	Ответ = HTTPСоединение.ВызватьHTTPМетод("GET",HTTPЗапрос);
	Если ОбработатьОтвет(Ответ) Тогда
		ЧтениеJSON = Новый ЧтениеJSON;
		ЧтениеJSON.УстановитьСтроку(Ответ.ПолучитьТелоКакСтроку(КодировкаТекста.UTF8));
		ДанныеJSON = ПрочитатьJSON(ЧтениеJSON);
		ЧтениеJSON.Закрыть();
		//
		ДанныеМассив = Новый Массив;
		Для Каждого Стр Из ДанныеJSON Цикл
			ДанныеСтрока = Новый Структура;
			ДанныеСтрока.Вставить("Идентификатор",ОбработатьИдентификатор(Стр.id));
			ДанныеСтрока.Вставить("Название",Стр.name);
			ДанныеСтрока.Вставить("КоличествоКомментариев",Стр.comment_count);
			ДанныеСтрока.Вставить("ПорядковыйНомер",Стр.order);
			ДанныеСтрока.Вставить("Цвет",Стр.color);
			ДанныеСтрока.Вставить("Общий",Стр.is_shared);
			ДанныеСтрока.Вставить("Избранное",Стр.is_favorite);
			ДанныеСтрока.Вставить("Входящие",Стр.is_inbox_project);
			ДанныеСтрока.Вставить("ВходящиеКоманды",Стр.is_team_inbox);
			ДанныеСтрока.Вставить("СпособОтображения",Стр.view_style);
			ДанныеСтрока.Вставить("Ссылка",Стр.url);
			ДанныеСтрока.Вставить("ИдентификаторРодителя",ОбработатьИдентификатор(Стр.parent_id));
			ДанныеМассив.Добавить(ДанныеСтрока);
		КонецЦикла;
		//
		Возврат ДанныеМассив;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
КонецФункции
//
Функция СоздатьНовыйПроект(Данные) Экспорт
	HTTPСоединение = ПолучитьСоединение();
	Адрес = "/rest/v2/projects";
	//
	Параметры = Новый Структура;
	//
	HTTPЗапрос = Новый HTTPЗапрос(ВставитьПараметры(Адрес,Параметры),ПолучитьЗаголовки());
	//
	ДанныеТела = Новый Структура;
	ДанныеТела.Вставить("name",Данные.Название);
	ДанныеТела.Вставить("parent_id",Данные.ИдентификаторРодителя);
	ДанныеТела.Вставить("color",Данные.Цвет);
	ДанныеТела.Вставить("is_favorite",Данные.Избранное);
	Если Данные.СпособОтображенияДоска Тогда
		ДанныеТела.Вставить("view_style","board");
	КонецЕсли;	
	//
	HTTPЗапрос.УстановитьИмяФайлаТела(ПолучитьJSONФайл(ДанныеТела));
	Ответ = HTTPСоединение.ВызватьHTTPМетод("POST",HTTPЗапрос);
	Если ОбработатьОтвет(Ответ) Тогда
		ЧтениеJSON = Новый ЧтениеJSON;
		ЧтениеJSON.УстановитьСтроку(Ответ.ПолучитьТелоКакСтроку(КодировкаТекста.UTF8));
		ДанныеJSON = ПрочитатьJSON(ЧтениеJSON);
		ЧтениеJSON.Закрыть();
		//
		ДанныеСтрока = Новый Структура;
		ДанныеСтрока.Вставить("Идентификатор",ОбработатьИдентификатор(ДанныеJSON.id));
		ДанныеСтрока.Вставить("Название",ДанныеJSON.name);
		ДанныеСтрока.Вставить("КоличествоКомментариев",ДанныеJSON.comment_count);
		ДанныеСтрока.Вставить("Цвет",ДанныеJSON.color);
		ДанныеСтрока.Вставить("Общий",ДанныеJSON.is_shared);
		ДанныеСтрока.Вставить("ПорядковыйНомер",ДанныеJSON.order);
		ДанныеСтрока.Вставить("Избранное",ДанныеJSON.is_favorite);
		ДанныеСтрока.Вставить("Входящие",ДанныеJSON.is_inbox_project);
		ДанныеСтрока.Вставить("ВходящиеКоманды",ДанныеJSON.is_team_inbox);
		ДанныеСтрока.Вставить("СпособОтображения",ДанныеJSON.view_style);
		ДанныеСтрока.Вставить("Ссылка",ДанныеJSON.url);
		ДанныеСтрока.Вставить("ИдентификаторРодителя",ОбработатьИдентификатор(ДанныеJSON.parent_id));		
		//
		Возврат ДанныеСтрока;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
КонецФункции
//
Функция ПолучитьПроект(Данные) Экспорт
	Если Данные.ИдентификаторПроекта = "" Тогда
		Возврат Неопределено;
	КонецЕсли;
	//
	HTTPСоединение = ПолучитьСоединение();
	Адрес = "/rest/v2/projects/"+Данные.ИдентификаторПроекта;
	//
	Параметры = Новый Структура;
	//
	HTTPЗапрос = Новый HTTPЗапрос(ВставитьПараметры(Адрес,Параметры),ПолучитьЗаголовки());
	//
	Ответ = HTTPСоединение.ВызватьHTTPМетод("GET",HTTPЗапрос);
	Если ОбработатьОтвет(Ответ) Тогда
		ЧтениеJSON = Новый ЧтениеJSON;
		ЧтениеJSON.УстановитьСтроку(Ответ.ПолучитьТелоКакСтроку(КодировкаТекста.UTF8));
		ДанныеJSON = ПрочитатьJSON(ЧтениеJSON);
		ЧтениеJSON.Закрыть();
		//
		ДанныеСтрока = Новый Структура;
		ДанныеСтрока.Вставить("Идентификатор",ОбработатьИдентификатор(ДанныеJSON.id));
		ДанныеСтрока.Вставить("Название",ДанныеJSON.name);
		ДанныеСтрока.Вставить("КоличествоКомментариев",ДанныеJSON.comment_count);
		ДанныеСтрока.Вставить("Цвет",ДанныеJSON.color);
		ДанныеСтрока.Вставить("Общий",ДанныеJSON.is_shared);
		ДанныеСтрока.Вставить("ПорядковыйНомер",ДанныеJSON.order);
		ДанныеСтрока.Вставить("Избранное",ДанныеJSON.is_favorite);
		ДанныеСтрока.Вставить("Входящие",ДанныеJSON.is_inbox_project);
		ДанныеСтрока.Вставить("ВходящиеКоманды",ДанныеJSON.is_team_inbox);
		ДанныеСтрока.Вставить("СпособОтображения",ДанныеJSON.view_style);
		ДанныеСтрока.Вставить("Ссылка",ДанныеJSON.url);
		ДанныеСтрока.Вставить("ИдентификаторРодителя",ОбработатьИдентификатор(ДанныеJSON.parent_id));		
		//
		Возврат ДанныеСтрока;
	Иначе
		Возврат Неопределено;
	КонецЕсли
КонецФункции
//
Функция ОбновитьПроект(Данные) Экспорт
	Если Данные.ИдентификаторПроекта = "" Тогда
		Возврат Неопределено;
	КонецЕсли;
	//
	HTTPСоединение = ПолучитьСоединение();
	Адрес = "/rest/v2/projects/"+Данные.ИдентификаторПроекта;
	//
	Параметры = Новый Структура;
	//
	HTTPЗапрос = Новый HTTPЗапрос(ВставитьПараметры(Адрес,Параметры),ПолучитьЗаголовки());
	//
	ДанныеТела = Новый Структура;
	Если СтрДлина(Данные.Название) > 0 Тогда
		ДанныеТела.Вставить("name",Данные.Название);
	КонецЕсли;
	ДанныеТела.Вставить("color",Данные.Цвет);
	ДанныеТела.Вставить("is_favorite",Данные.Избранное);
	Если Данные.СпособОтображенияДоска Тогда
		ДанныеТела.Вставить("view_style","board");
	КонецЕсли;	
	//
	HTTPЗапрос.УстановитьИмяФайлаТела(ПолучитьJSONФайл(ДанныеТела));
	Ответ = HTTPСоединение.ВызватьHTTPМетод("POST",HTTPЗапрос);
	Если ОбработатьОтвет(Ответ) Тогда
		ЧтениеJSON = Новый ЧтениеJSON;
		ЧтениеJSON.УстановитьСтроку(Ответ.ПолучитьТелоКакСтроку(КодировкаТекста.UTF8));
		ДанныеJSON = ПрочитатьJSON(ЧтениеJSON);
		ЧтениеJSON.Закрыть();
		//
		ДанныеСтрока = Новый Структура;
		ДанныеСтрока.Вставить("Идентификатор",ОбработатьИдентификатор(ДанныеJSON.id));
		ДанныеСтрока.Вставить("Название",ДанныеJSON.name);
		ДанныеСтрока.Вставить("КоличествоКомментариев",ДанныеJSON.comment_count);
		ДанныеСтрока.Вставить("Цвет",ДанныеJSON.color);
		ДанныеСтрока.Вставить("Общий",ДанныеJSON.is_shared);
		ДанныеСтрока.Вставить("ПорядковыйНомер",ДанныеJSON.order);
		ДанныеСтрока.Вставить("Избранное",ДанныеJSON.is_favorite);
		ДанныеСтрока.Вставить("Входящие",ДанныеJSON.is_inbox_project);
		ДанныеСтрока.Вставить("ВходящиеКоманды",ДанныеJSON.is_team_inbox);
		ДанныеСтрока.Вставить("СпособОтображения",ДанныеJSON.view_style);
		ДанныеСтрока.Вставить("Ссылка",ДанныеJSON.url);
		ДанныеСтрока.Вставить("ИдентификаторРодителя",ОбработатьИдентификатор(ДанныеJSON.parent_id));		
		//
		Возврат ДанныеСтрока;
	Иначе
		Возврат Неопределено;
	КонецЕсли
КонецФункции
//
Функция УдалитьПроект(Данные) Экспорт
	Если Данные.ИдентификаторПроекта = "" Тогда
		Возврат Неопределено;
	КонецЕсли;
	//
	HTTPСоединение = ПолучитьСоединение();
	Адрес = "/rest/v2/projects/"+Данные.ИдентификаторПроекта;
	//
	Параметры = Новый Структура;
	//
	HTTPЗапрос = Новый HTTPЗапрос(ВставитьПараметры(Адрес,Параметры),ПолучитьЗаголовки());
	//
	Ответ = HTTPСоединение.ВызватьHTTPМетод("DELETE",HTTPЗапрос);
	Возврат ОбработатьОтвет(Ответ);
КонецФункции
//
Функция ПолучитьУчастниковПроекта(Данные) Экспорт
	Если Данные.ИдентификаторПроекта = "" Тогда
		Возврат Неопределено;
	КонецЕсли;
	//
	HTTPСоединение = ПолучитьСоединение();
	Адрес = "/rest/v2/projects/"+Данные.ИдентификаторПроекта+"/collaborators";
	//
	Параметры = Новый Структура;
	//
	HTTPЗапрос = Новый HTTPЗапрос(ВставитьПараметры(Адрес,Параметры),ПолучитьЗаголовки());
	Ответ = HTTPСоединение.ВызватьHTTPМетод("GET",HTTPЗапрос);
	Если ОбработатьОтвет(Ответ) Тогда
		ЧтениеJSON = Новый ЧтениеJSON;
		ЧтениеJSON.УстановитьСтроку(Ответ.ПолучитьТелоКакСтроку(КодировкаТекста.UTF8));
		ДанныеJSON = ПрочитатьJSON(ЧтениеJSON);
		ЧтениеJSON.Закрыть();
		//
		ДанныеМассив = Новый Массив;
		Для Каждого Стр Из ДанныеJSON Цикл
			ДанныеСтрока = Новый Структура;
			ДанныеСтрока.Вставить("Идентификатор",ОбработатьИдентификатор(Стр.id));
			ДанныеСтрока.Вставить("ИмяПользователя",Стр.name);
			ДанныеСтрока.Вставить("EMail",Стр.email);
			ДанныеМассив.Добавить(ДанныеСтрока);
		КонецЦикла;
		//
		Возврат ДанныеМассив;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
КонецФункции

///Секции
Функция ПолучитьСписокВсехСекцийПроекта(Данные) Экспорт
	HTTPСоединение = ПолучитьСоединение();
	Адрес = "/rest/v2/sections";
	//
	Параметры = Новый Структура;
	Параметры.Вставить("project_id",Данные.ИдентификаторПроекта);
	//
	HTTPЗапрос = Новый HTTPЗапрос(ВставитьПараметры(Адрес,Параметры),ПолучитьЗаголовки());
	Ответ = HTTPСоединение.ВызватьHTTPМетод("GET",HTTPЗапрос);
	Если ОбработатьОтвет(Ответ) Тогда
		ЧтениеJSON = Новый ЧтениеJSON;
		ЧтениеJSON.УстановитьСтроку(Ответ.ПолучитьТелоКакСтроку(КодировкаТекста.UTF8));
		ДанныеJSON = ПрочитатьJSON(ЧтениеJSON);
		ЧтениеJSON.Закрыть();
		//
		ДанныеМассив = Новый Массив;
		Для Каждого Стр Из ДанныеJSON Цикл
			ДанныеСтрока = Новый Структура;
			ДанныеСтрока.Вставить("Идентификатор",ОбработатьИдентификатор(Стр.id));
			ДанныеСтрока.Вставить("ИдентификаторПроекта",ОбработатьИдентификатор(Стр.project_id));
			ДанныеСтрока.Вставить("ПорядковыйНомер",Стр.order);
			ДанныеСтрока.Вставить("Название",Стр.name);		
			ДанныеМассив.Добавить(ДанныеСтрока);
		КонецЦикла;
		//
		Возврат ДанныеМассив;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
КонецФункции
//
Функция СоздатьНовуюСекцию(Данные) Экспорт
	Если Данные.ИдентификаторПроекта = "" Тогда
		Возврат Неопределено;	
	ИначеЕсли Данные.Название = "" Тогда
		Возврат Неопределено;
	КонецЕсли;
	HTTPСоединение = ПолучитьСоединение();
	Адрес = "/rest/v2/sections";
	//
	Параметры = Новый Структура;
	//
	HTTPЗапрос = Новый HTTPЗапрос(ВставитьПараметры(Адрес,Параметры),ПолучитьЗаголовки());
	//
	ДанныеТела = Новый Структура;
	ДанныеТела.Вставить("name",Данные.Название);
	ДанныеТела.Вставить("project_id",Данные.ИдентификаторПроекта);
	ДанныеТела.Вставить("order",Данные.ПорядковыйНомер);	
	//
	HTTPЗапрос.УстановитьИмяФайлаТела(ПолучитьJSONФайл(ДанныеТела));
	Ответ = HTTPСоединение.ВызватьHTTPМетод("POST",HTTPЗапрос);
	Сообщить(Ответ.ПолучитьТелоКакСтроку());
	Если ОбработатьОтвет(Ответ) Тогда
		ЧтениеJSON = Новый ЧтениеJSON;
		ЧтениеJSON.УстановитьСтроку(Ответ.ПолучитьТелоКакСтроку(КодировкаТекста.UTF8));
		ДанныеJSON = ПрочитатьJSON(ЧтениеJSON);
		ЧтениеJSON.Закрыть();
		//
		ДанныеСтрока = Новый Структура;
		ДанныеСтрока.Вставить("Идентификатор",ОбработатьИдентификатор(ДанныеJSON.id));
		ДанныеСтрока.Вставить("Название",ДанныеJSON.name);
		ДанныеСтрока.Вставить("ИдентификаторПроекта",ОбработатьИдентификатор(ДанныеJSON.project_id));		
		//
		Возврат ДанныеСтрока;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
КонецФункции
//
Функция ПолучитьСекцию(Данные) Экспорт
	Если Данные.ИдентификаторСекции = "" Тогда
		Возврат Неопределено;
	КонецЕсли;
	//
	HTTPСоединение = ПолучитьСоединение();
	Адрес = "/rest/v2/sections/"+Данные.ИдентификаторСекции;
	//
	Параметры = Новый Структура;
	//
	HTTPЗапрос = Новый HTTPЗапрос(ВставитьПараметры(Адрес,Параметры),ПолучитьЗаголовки());
	//
	Ответ = HTTPСоединение.ВызватьHTTPМетод("GET",HTTPЗапрос);
	Если ОбработатьОтвет(Ответ) Тогда
		ЧтениеJSON = Новый ЧтениеJSON;
		ЧтениеJSON.УстановитьСтроку(Ответ.ПолучитьТелоКакСтроку(КодировкаТекста.UTF8));
		ДанныеJSON = ПрочитатьJSON(ЧтениеJSON);
		ЧтениеJSON.Закрыть();
		//
		ДанныеСтрока = Новый Структура;
		ДанныеСтрока.Вставить("Идентификатор",ОбработатьИдентификатор(ДанныеJSON.id));
		ДанныеСтрока.Вставить("Название",ДанныеJSON.name);
		ДанныеСтрока.Вставить("ИдентификаторПроекта",ОбработатьИдентификатор(ДанныеJSON.project_id));
		ДанныеСтрока.Вставить("ПорядковыйНомер",ДанныеJSON.order);		
		//
		Возврат ДанныеСтрока;
	Иначе
		Возврат Неопределено;
	КонецЕсли
КонецФункции
//
Функция ОбновитьСекцию(Данные) Экспорт
	Если Данные.ИдентификаторСекции = "" Тогда
		Возврат Неопределено;
	ИначеЕсли Данные.Название = "" Тогда
		Возврат Неопределено;
	КонецЕсли;
	//
	HTTPСоединение = ПолучитьСоединение();
	Адрес = "/rest/v2/sections/"+Данные.ИдентификаторСекции;
	//
	Параметры = Новый Структура;
	//
	HTTPЗапрос = Новый HTTPЗапрос(ВставитьПараметры(Адрес,Параметры),ПолучитьЗаголовки());
	//
	ДанныеТела = Новый Структура;
	ДанныеТела.Вставить("name",Данные.Название);
	//
	HTTPЗапрос.УстановитьИмяФайлаТела(ПолучитьJSONФайл(ДанныеТела));
	Ответ = HTTPСоединение.ВызватьHTTPМетод("POST",HTTPЗапрос);
	Если ОбработатьОтвет(Ответ) Тогда
		ЧтениеJSON = Новый ЧтениеJSON;
		ЧтениеJSON.УстановитьСтроку(Ответ.ПолучитьТелоКакСтроку(КодировкаТекста.UTF8));
		ДанныеJSON = ПрочитатьJSON(ЧтениеJSON);
		ЧтениеJSON.Закрыть();
		//
		ДанныеСтрока = Новый Структура;
		ДанныеСтрока.Вставить("Идентификатор",ОбработатьИдентификатор(ДанныеJSON.id));
		ДанныеСтрока.Вставить("Название",ДанныеJSON.name);
		ДанныеСтрока.Вставить("ИдентификаторПроекта",ОбработатьИдентификатор(ДанныеJSON.project_id));
		ДанныеСтрока.Вставить("ПорядковыйНомер",ДанныеJSON.order);		
		//
		Возврат ДанныеСтрока;
	Иначе
		Возврат Неопределено;
	КонецЕсли
КонецФункции
//
Функция УдалитьСекцию(Данные) Экспорт
	Если Данные.ИдентификаторСекции = "" Тогда
		Возврат Неопределено;
	КонецЕсли;
	//
	HTTPСоединение = ПолучитьСоединение();
	Адрес = "/rest/v2/sections/"+Данные.ИдентификаторСекции;
	//
	Параметры = Новый Структура;
	//
	HTTPЗапрос = Новый HTTPЗапрос(ВставитьПараметры(Адрес,Параметры),ПолучитьЗаголовки());
	//
	Ответ = HTTPСоединение.ВызватьHTTPМетод("DELETE",HTTPЗапрос);
	Возврат ОбработатьОтвет(Ответ);
КонецФункции

///Задачи
Функция ПолучитьСписокАктивныхЗадач() Экспорт
	HTTPСоединение = ПолучитьСоединение();
	Адрес = "/rest/v2/tasks";
	//
	Параметры = Новый Структура;
	//
	HTTPЗапрос = Новый HTTPЗапрос(ВставитьПараметры(Адрес,Параметры),ПолучитьЗаголовки());
	Ответ = HTTPСоединение.ВызватьHTTPМетод("GET",HTTPЗапрос);
	Если ОбработатьОтвет(Ответ) Тогда
		ЧтениеJSON = Новый ЧтениеJSON;
		ЧтениеJSON.УстановитьСтроку(Ответ.ПолучитьТелоКакСтроку(КодировкаТекста.UTF8));
		ДанныеJSON = ПрочитатьJSON(ЧтениеJSON);
		ЧтениеJSON.Закрыть();
		//
		ДанныеМассив = Новый Массив;
		Для Каждого Стр Из ДанныеJSON Цикл
			ДанныеСтрока = Новый Структура;
			ДанныеСтрока.Вставить("ИдентификаторСоздателя",ОбработатьИдентификатор(Стр.creator_id));		
			ДанныеСтрока.Вставить("ДатаСоздания",Стр.created_at);
			ДанныеСтрока.Вставить("ИдентификаторИсполнителя",ОбработатьИдентификатор(Стр.assignee_id));
			ДанныеСтрока.Вставить("ИдентификаторДелегировавшего",ОбработатьИдентификатор(Стр.assigner_id));
			ДанныеСтрока.Вставить("КоличествоКомментариев",Стр.comment_count);
			ДанныеСтрока.Вставить("Исполнен",Стр.is_completed);
			ДанныеСтрока.Вставить("Содержание",Стр.content);
			ДанныеСтрока.Вставить("Описание",Стр.description);
			//                                
			ДанныеСрокИсполнения = Новый Структура;
			//
			Если Стр.due <> Неопределено Тогда
				ДанныеСрокИсполнения.Вставить("ДатаИсполнения",Стр.due.date);
				ДанныеСрокИсполнения.Вставить("Повторяющийся",Стр.due.is_recurring);
				ДанныеСрокИсполнения.Вставить("ДатаВремяСтрокой",Стр.due.string);
				Попытка
					ДанныеСрокИсполнения.Вставить("Время",Стр.due.datetime);	
				Исключение
					//
				КонецПопытки;
				//
				Попытка
					ДанныеСрокИсполнения.Вставить("ЧасовойПояс",Стр.due.timezone);
				Исключение
					//
				КонецПопытки;
			КонецЕсли;
			//
			ДанныеСтрока.Вставить("СрокИсполнения",ДанныеСрокИсполнения);
			ДанныеСтрока.Вставить("Идентификатор",ОбработатьИдентификатор(Стр.id));
			ДанныеСтрока.Вставить("Метки",Стр.labels);
			ДанныеСтрока.Вставить("ПорядковыйНомер",Стр.order);
			ДанныеСтрока.Вставить("Приоритет",Стр.priority);
			ДанныеСтрока.Вставить("ИдентификаторПроекта",ОбработатьИдентификатор(Стр.project_id));
			ДанныеСтрока.Вставить("ИдентификаторСекции",ОбработатьИдентификатор(Стр.section_id));
			ДанныеСтрока.Вставить("ИдентификаторРодителя",ОбработатьИдентификатор(Стр.parent_id));
			ДанныеСтрока.Вставить("Ссылка",Стр.url);
			ДанныеМассив.Добавить(ДанныеСтрока);
		КонецЦикла;
		//
		Возврат ДанныеМассив;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
КонецФункции
//
Функция СоздатьНовуюЗадачу(Данные) Экспорт
	HTTPСоединение = ПолучитьСоединение();
	Адрес = "/rest/v2/tasks";
	//
	Параметры = Новый Структура;
	//
	HTTPЗапрос = Новый HTTPЗапрос(ВставитьПараметры(Адрес,Параметры),ПолучитьЗаголовки());
	//
	ДанныеТела = Новый Структура;
	ДанныеТела.Вставить("content",Данные.Содержание);
	ДанныеТела.Вставить("description",Данные.Описание);
	//TODO: Добавить возможность вводить больше данных для создания задачи
	//
	HTTPЗапрос.УстановитьИмяФайлаТела(ПолучитьJSONФайл(ДанныеТела));
	Ответ = HTTPСоединение.ВызватьHTTPМетод("POST",HTTPЗапрос);
	Если ОбработатьОтвет(Ответ) Тогда
		ЧтениеJSON = Новый ЧтениеJSON;
		ЧтениеJSON.УстановитьСтроку(Ответ.ПолучитьТелоКакСтроку(КодировкаТекста.UTF8));
		ДанныеJSON = ПрочитатьJSON(ЧтениеJSON);
		ЧтениеJSON.Закрыть();
		//
		ДанныеСтрока = Новый Структура;
		ДанныеСтрока.Вставить("ИдентификаторСоздателя",ОбработатьИдентификатор(ДанныеJSON.creator_id));		
		ДанныеСтрока.Вставить("ДатаСоздания",ДанныеJSON.created_at);
		ДанныеСтрока.Вставить("ИдентификаторИсполнителя",ОбработатьИдентификатор(ДанныеJSON.assignee_id));
		ДанныеСтрока.Вставить("ИдентификаторДелегировавшего",ОбработатьИдентификатор(ДанныеJSON.assigner_id));
		ДанныеСтрока.Вставить("КоличествоКомментариев",ДанныеJSON.comment_count);
		ДанныеСтрока.Вставить("Исполнен",ДанныеJSON.is_completed);
		ДанныеСтрока.Вставить("Содержание",ДанныеJSON.content);
		ДанныеСтрока.Вставить("Описание",ДанныеJSON.description);
		//                                
		ДанныеСрокИсполнения = Новый Структура;
		//
		Если ДанныеJSON.due <> Неопределено Тогда
			ДанныеСрокИсполнения.Вставить("ДатаИсполнения",ДанныеJSON.due.date);
			ДанныеСрокИсполнения.Вставить("Повторяющийся",ДанныеJSON.due.is_recurring);
			ДанныеСрокИсполнения.Вставить("ДатаВремяСтрокой",ДанныеJSON.due.string);
			Попытка
				ДанныеСрокИсполнения.Вставить("Время",ДанныеJSON.due.datetime);	
			Исключение
				//
			КонецПопытки;
			//
			Попытка
				ДанныеСрокИсполнения.Вставить("ЧасовойПояс",ДанныеJSON.due.timezone);
			Исключение
				//
			КонецПопытки;
		КонецЕсли;
		//
		ДанныеСтрока.Вставить("СрокИсполнения",ДанныеСрокИсполнения);
		ДанныеСтрока.Вставить("Идентификатор",ОбработатьИдентификатор(ДанныеJSON.id));
		ДанныеСтрока.Вставить("Метки",ДанныеJSON.labels);
		ДанныеСтрока.Вставить("ПорядковыйНомер",ДанныеJSON.order);
		ДанныеСтрока.Вставить("Приоритет",ДанныеJSON.priority);
		ДанныеСтрока.Вставить("ИдентификаторПроекта",ОбработатьИдентификатор(ДанныеJSON.project_id));
		ДанныеСтрока.Вставить("ИдентификаторСекции",ОбработатьИдентификатор(ДанныеJSON.section_id));
		ДанныеСтрока.Вставить("ИдентификаторРодителя",ОбработатьИдентификатор(ДанныеJSON.parent_id));
		ДанныеСтрока.Вставить("Ссылка",ДанныеJSON.url);		
		//
		Возврат ДанныеСтрока;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
КонецФункции
//
Функция ПолучитьЗадачу(Данные) Экспорт
	Если Данные.ИдентификаторЗадачи = "" Тогда
		Возврат Неопределено;
	КонецЕсли;
	//
	HTTPСоединение = ПолучитьСоединение();
	Адрес = "/rest/v2/tasks/"+Данные.ИдентификаторЗадачи;
	//
	Параметры = Новый Структура;
	//
	HTTPЗапрос = Новый HTTPЗапрос(ВставитьПараметры(Адрес,Параметры),ПолучитьЗаголовки());
	//
	Ответ = HTTPСоединение.ВызватьHTTPМетод("GET",HTTPЗапрос);
	Если ОбработатьОтвет(Ответ) Тогда
		ЧтениеJSON = Новый ЧтениеJSON;
		ЧтениеJSON.УстановитьСтроку(Ответ.ПолучитьТелоКакСтроку(КодировкаТекста.UTF8));
		ДанныеJSON = ПрочитатьJSON(ЧтениеJSON);
		ЧтениеJSON.Закрыть();
		//
		ДанныеСтрока = Новый Структура;
		ДанныеСтрока.Вставить("ИдентификаторСоздателя",ОбработатьИдентификатор(ДанныеJSON.creator_id));		
		ДанныеСтрока.Вставить("ДатаСоздания",ДанныеJSON.created_at);
		ДанныеСтрока.Вставить("ИдентификаторИсполнителя",ОбработатьИдентификатор(ДанныеJSON.assignee_id));
		ДанныеСтрока.Вставить("ИдентификаторДелегировавшего",ОбработатьИдентификатор(ДанныеJSON.assigner_id));
		ДанныеСтрока.Вставить("КоличествоКомментариев",ДанныеJSON.comment_count);
		ДанныеСтрока.Вставить("Исполнен",ДанныеJSON.is_completed);
		ДанныеСтрока.Вставить("Содержание",ДанныеJSON.content);
		ДанныеСтрока.Вставить("Описание",ДанныеJSON.description);
		//                                
		ДанныеСрокИсполнения = Новый Структура;
		//
		Если ДанныеJSON.due <> Неопределено Тогда
			ДанныеСрокИсполнения.Вставить("ДатаИсполнения",ДанныеJSON.due.date);
			ДанныеСрокИсполнения.Вставить("Повторяющийся",ДанныеJSON.due.is_recurring);
			ДанныеСрокИсполнения.Вставить("ДатаВремяСтрокой",ДанныеJSON.due.string);
			Попытка
				ДанныеСрокИсполнения.Вставить("Время",ДанныеJSON.due.datetime);	
			Исключение
				//
			КонецПопытки;
			//
			Попытка
				ДанныеСрокИсполнения.Вставить("ЧасовойПояс",ДанныеJSON.due.timezone);
			Исключение
				//
			КонецПопытки;
		КонецЕсли;
		//
		ДанныеСтрока.Вставить("СрокИсполнения",ДанныеСрокИсполнения);
		ДанныеСтрока.Вставить("Идентификатор",ОбработатьИдентификатор(ДанныеJSON.id));
		ДанныеСтрока.Вставить("Метки",ДанныеJSON.labels);
		ДанныеСтрока.Вставить("ПорядковыйНомер",ДанныеJSON.order);
		ДанныеСтрока.Вставить("Приоритет",ДанныеJSON.priority);
		ДанныеСтрока.Вставить("ИдентификаторПроекта",ОбработатьИдентификатор(ДанныеJSON.project_id));
		ДанныеСтрока.Вставить("ИдентификаторСекции",ОбработатьИдентификатор(ДанныеJSON.section_id));
		ДанныеСтрока.Вставить("ИдентификаторРодителя",ОбработатьИдентификатор(ДанныеJSON.parent_id));
		ДанныеСтрока.Вставить("Ссылка",ДанныеJSON.url);		
		//
		Возврат ДанныеСтрока;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
КонецФункции
//
Функция ОбновитьЗадачу(Данные) Экспорт
	HTTPСоединение = ПолучитьСоединение();
	Адрес = "/rest/v2/tasks/"+Данные.ИдентификаторЗадачи;
	//
	Параметры = Новый Структура;
	//
	ДанныеТела = Новый Структура;
	ДанныеТела.Вставить("content",Данные.Содержание);
	ДанныеТела.Вставить("description",Данные.Описание);
	//TODO: Добавить возможность вводить больше данных для обновления задачи
	//
	HTTPЗапрос = Новый HTTPЗапрос(ВставитьПараметры(Адрес,Параметры),ПолучитьЗаголовки());
	HTTPЗапрос.УстановитьИмяФайлаТела(ПолучитьJSONФайл(ДанныеТела));
	//
	Ответ = HTTPСоединение.ВызватьHTTPМетод("POST",HTTPЗапрос);
	Если ОбработатьОтвет(Ответ) Тогда
		ЧтениеJSON = Новый ЧтениеJSON;
		ЧтениеJSON.УстановитьСтроку(Ответ.ПолучитьТелоКакСтроку(КодировкаТекста.UTF8));
		ДанныеJSON = ПрочитатьJSON(ЧтениеJSON);
		ЧтениеJSON.Закрыть();
		//
		ДанныеСтрока = Новый Структура;
		ДанныеСтрока.Вставить("ИдентификаторСоздателя",ОбработатьИдентификатор(ДанныеJSON.creator_id));		
		ДанныеСтрока.Вставить("ДатаСоздания",ДанныеJSON.created_at);
		ДанныеСтрока.Вставить("ИдентификаторИсполнителя",ОбработатьИдентификатор(ДанныеJSON.assignee_id));
		ДанныеСтрока.Вставить("ИдентификаторДелегировавшего",ОбработатьИдентификатор(ДанныеJSON.assigner_id));
		ДанныеСтрока.Вставить("КоличествоКомментариев",ДанныеJSON.comment_count);
		ДанныеСтрока.Вставить("Исполнен",ДанныеJSON.is_completed);
		ДанныеСтрока.Вставить("Содержание",ДанныеJSON.content);
		ДанныеСтрока.Вставить("Описание",ДанныеJSON.description);
		//                                
		ДанныеСрокИсполнения = Новый Структура;
		//
		Если ДанныеJSON.due <> Неопределено Тогда
			ДанныеСрокИсполнения.Вставить("ДатаИсполнения",ДанныеJSON.due.date);
			ДанныеСрокИсполнения.Вставить("Повторяющийся",ДанныеJSON.due.is_recurring);
			ДанныеСрокИсполнения.Вставить("ДатаВремяСтрокой",ДанныеJSON.due.string);
			Попытка
				ДанныеСрокИсполнения.Вставить("Время",ДанныеJSON.due.datetime);	
			Исключение
				//
			КонецПопытки;
			//
			Попытка
				ДанныеСрокИсполнения.Вставить("ЧасовойПояс",ДанныеJSON.due.timezone);
			Исключение
				//
			КонецПопытки;
		КонецЕсли;
		//
		ДанныеСтрока.Вставить("СрокИсполнения",ДанныеСрокИсполнения);
		ДанныеСтрока.Вставить("Идентификатор",ОбработатьИдентификатор(ДанныеJSON.id));
		ДанныеСтрока.Вставить("Метки",ДанныеJSON.labels);
		ДанныеСтрока.Вставить("ПорядковыйНомер",ДанныеJSON.order);
		ДанныеСтрока.Вставить("Приоритет",ДанныеJSON.priority);
		ДанныеСтрока.Вставить("ИдентификаторПроекта",ОбработатьИдентификатор(ДанныеJSON.project_id));
		ДанныеСтрока.Вставить("ИдентификаторСекции",ОбработатьИдентификатор(ДанныеJSON.section_id));
		ДанныеСтрока.Вставить("ИдентификаторРодителя",ОбработатьИдентификатор(ДанныеJSON.parent_id));
		ДанныеСтрока.Вставить("Ссылка",ДанныеJSON.url);		
		//
		Возврат ДанныеСтрока;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
КонецФункции
//
Функция ЗакрытьЗадачу(Данные) Экспорт
	Если Данные.ИдентификаторЗадачи = "" Тогда
		Возврат Неопределено;
	КонецЕсли;
	//
	HTTPСоединение = ПолучитьСоединение();
	Адрес = "/rest/v2/tasks/"+Данные.ИдентификаторЗадачи+"/close";
	//
	Параметры = Новый Структура;
	//
	HTTPЗапрос = Новый HTTPЗапрос(ВставитьПараметры(Адрес,Параметры),ПолучитьЗаголовки());
	//
	Ответ = HTTPСоединение.ВызватьHTTPМетод("POST",HTTPЗапрос);
	Возврат ОбработатьОтвет(Ответ);	
КонецФункции
//
Функция АктивироватьЗакрытуюЗадачу(Данные) Экспорт
	Если Данные.ИдентификаторЗадачи = "" Тогда
		Возврат Неопределено;
	КонецЕсли;
	//
	HTTPСоединение = ПолучитьСоединение();
	Адрес = "/rest/v2/tasks/"+Данные.ИдентификаторЗадачи+"/reopen";
	//
	Параметры = Новый Структура;
	//
	HTTPЗапрос = Новый HTTPЗапрос(ВставитьПараметры(Адрес,Параметры),ПолучитьЗаголовки());
	//
	Ответ = HTTPСоединение.ВызватьHTTPМетод("POST",HTTPЗапрос);
	Возврат ОбработатьОтвет(Ответ);
КонецФункции
//
Функция УдалитьЗадачу(Данные) Экспорт
	Если Данные.ИдентификаторЗадачи = "" Тогда
		Возврат Неопределено;
	КонецЕсли;
	//
	HTTPСоединение = ПолучитьСоединение();
	Адрес = "/rest/v2/tasks/"+Данные.ИдентификаторЗадачи;
	//
	Параметры = Новый Структура;
	//
	HTTPЗапрос = Новый HTTPЗапрос(ВставитьПараметры(Адрес,Параметры),ПолучитьЗаголовки());
	//
	Ответ = HTTPСоединение.ВызватьHTTPМетод("DELETE",HTTPЗапрос);
	Возврат ОбработатьОтвет(Ответ);
КонецФункции

///Комментарии
Функция ПолучитьСписокВсехКомментариевЗадачи(Данные) Экспорт
	HTTPСоединение = ПолучитьСоединение();
	Адрес = "/rest/v2/comments";
	//
	Параметры = Новый Структура;
	Параметры.Вставить("task_id",Данные.ИдентификаторЗадачи);
	//
	HTTPЗапрос = Новый HTTPЗапрос(ВставитьПараметры(Адрес,Параметры),ПолучитьЗаголовки());
	Ответ = HTTPСоединение.ВызватьHTTPМетод("GET",HTTPЗапрос);
	Если ОбработатьОтвет(Ответ) Тогда
		ЧтениеJSON = Новый ЧтениеJSON;
		ЧтениеJSON.УстановитьСтроку(Ответ.ПолучитьТелоКакСтроку(КодировкаТекста.UTF8));
		ДанныеJSON = ПрочитатьJSON(ЧтениеJSON);
		ЧтениеJSON.Закрыть();
		//
		ДанныеМассив = Новый Массив;
		Для Каждого Стр Из ДанныеJSON Цикл
			ДанныеСтрока = Новый Структура;
			ДанныеСтрока.Вставить("Содержание",Стр.content);
			ДанныеСтрока.Вставить("Идентификатор",ОбработатьИдентификатор(Стр.id));
			ДанныеСтрока.Вставить("ДатаВремяСоздания",Стр.posted_at);
			ДанныеСтрока.Вставить("ИдентификаторПроекта",ОбработатьИдентификатор(Стр.project_id));
			ДанныеСтрока.Вставить("ИдентификаторЗадачи",ОбработатьИдентификатор(Стр.task_id));
			//
			ДанныеПривязанныйФайл = Новый Структура;
			Если Стр.attachment <> Неопределено Тогда
				ДанныеПривязанныйФайл.Вставить("НазваниеФайла",Стр.attachment.file_name);
				ДанныеПривязанныйФайл.Вставить("ТипФайла",Стр.attachment.file_type);
				ДанныеПривязанныйФайл.Вставить("СсылкаНаФайл",Стр.attachment.file_url);
				ДанныеПривязанныйФайл.Вставить("ТипСодержимого",Стр.attachment.resource_type);
			КонецЕсли;
			//
			ДанныеСтрока.Вставить("ПривязанныйФайл",ДанныеПривязанныйФайл);
			ДанныеМассив.Добавить(ДанныеСтрока);
		КонецЦикла;
		//
		Возврат ДанныеМассив;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
КонецФункции
//
Функция ПолучитьСписокВсехКомментариевПроекта(Данные) Экспорт
	HTTPСоединение = ПолучитьСоединение();
	Адрес = "/rest/v2/comments";
	//
	Параметры = Новый Структура;
	Параметры.Вставить("project_id",Данные.ИдентификаторПроекта);
	//
	HTTPЗапрос = Новый HTTPЗапрос(ВставитьПараметры(Адрес,Параметры),ПолучитьЗаголовки());
	Ответ = HTTPСоединение.ВызватьHTTPМетод("GET",HTTPЗапрос);
	Если ОбработатьОтвет(Ответ) Тогда
		ЧтениеJSON = Новый ЧтениеJSON;
		ЧтениеJSON.УстановитьСтроку(Ответ.ПолучитьТелоКакСтроку(КодировкаТекста.UTF8));
		ДанныеJSON = ПрочитатьJSON(ЧтениеJSON);
		ЧтениеJSON.Закрыть();
		//
		ДанныеМассив = Новый Массив;
		Для Каждого Стр Из ДанныеJSON Цикл
			ДанныеСтрока = Новый Структура;
			ДанныеСтрока.Вставить("Содержание",Стр.content);
			ДанныеСтрока.Вставить("Идентификатор",ОбработатьИдентификатор(Стр.id));
			ДанныеСтрока.Вставить("ДатаВремяСоздания",Стр.posted_at);
			ДанныеСтрока.Вставить("ИдентификаторПроекта",ОбработатьИдентификатор(Стр.project_id));
			ДанныеСтрока.Вставить("ИдентификаторЗадачи",ОбработатьИдентификатор(Стр.task_id));
			//
			ДанныеПривязанныйФайл = Новый Структура;
			Если Стр.attachment <> Неопределено Тогда
				ДанныеПривязанныйФайл.Вставить("НазваниеФайла",Стр.attachment.file_name);
				ДанныеПривязанныйФайл.Вставить("ТипФайла",Стр.attachment.file_type);
				ДанныеПривязанныйФайл.Вставить("СсылкаНаФайл",Стр.attachment.file_url);
				ДанныеПривязанныйФайл.Вставить("ТипСодержимого",Стр.attachment.resource_type);
			КонецЕсли;
			//
			ДанныеСтрока.Вставить("ПривязанныйФайл",ДанныеПривязанныйФайл);
			ДанныеМассив.Добавить(ДанныеСтрока);
		КонецЦикла;
		//
		Возврат ДанныеМассив;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
КонецФункции
//
Функция СоздатьНовыйКомментарийЗадачи(Данные) Экспорт
	HTTPСоединение = ПолучитьСоединение();
	Адрес = "/rest/v2/comments";
	//
	Параметры = Новый Структура;
	//
	HTTPЗапрос = Новый HTTPЗапрос(ВставитьПараметры(Адрес,Параметры),ПолучитьЗаголовки());
	//
	ДанныеТела = Новый Структура;
	ДанныеТела.Вставить("task_id",Данные.ИдентификаторЗадачи);
	ДанныеТела.Вставить("content",Данные.Содержание);
	//TODO: Добавить возможность вводить больше данных для создания комментария задачи
	//
	HTTPЗапрос.УстановитьИмяФайлаТела(ПолучитьJSONФайл(ДанныеТела));
	Ответ = HTTPСоединение.ВызватьHTTPМетод("POST",HTTPЗапрос);
	Если ОбработатьОтвет(Ответ) Тогда
		ЧтениеJSON = Новый ЧтениеJSON;
		ЧтениеJSON.УстановитьСтроку(Ответ.ПолучитьТелоКакСтроку(КодировкаТекста.UTF8));
		ДанныеJSON = ПрочитатьJSON(ЧтениеJSON);
		ЧтениеJSON.Закрыть();
		//
		ДанныеСтрока = Новый Структура;
		ДанныеСтрока.Вставить("Содержание",ДанныеJSON.content);
		ДанныеСтрока.Вставить("Идентификатор",ОбработатьИдентификатор(ДанныеJSON.id));
		ДанныеСтрока.Вставить("ДатаВремяСоздания",ДанныеJSON.posted_at);
		ДанныеСтрока.Вставить("ИдентификаторПроекта",ОбработатьИдентификатор(ДанныеJSON.project_id));
		ДанныеСтрока.Вставить("ИдентификаторЗадачи",ОбработатьИдентификатор(ДанныеJSON.task_id));
		//
		ДанныеПривязанныйФайл = Новый Структура;
		Если ДанныеJSON.attachment <> Неопределено Тогда
			ДанныеПривязанныйФайл.Вставить("НазваниеФайла",ДанныеJSON.attachment.file_name);
			ДанныеПривязанныйФайл.Вставить("ТипФайла",ДанныеJSON.attachment.file_type);
			ДанныеПривязанныйФайл.Вставить("СсылкаНаФайл",ДанныеJSON.attachment.file_url);
			ДанныеПривязанныйФайл.Вставить("ТипСодержимого",ДанныеJSON.attachment.resource_type);
		КонецЕсли;
		//
		ДанныеСтрока.Вставить("ПривязанныйФайл",ДанныеПривязанныйФайл);
		Возврат ДанныеСтрока;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
КонецФункции
//
Функция СоздатьНовыйКомментарийПроекта(Данные) Экспорт
	HTTPСоединение = ПолучитьСоединение();
	Адрес = "/rest/v2/comments";
	//
	Параметры = Новый Структура;
	//
	HTTPЗапрос = Новый HTTPЗапрос(ВставитьПараметры(Адрес,Параметры),ПолучитьЗаголовки());
	//
	ДанныеТела = Новый Структура;
	ДанныеТела.Вставить("project_id",Данные.ИдентификаторЗадачи);
	ДанныеТела.Вставить("content",Данные.Содержание);
	//TODO: Добавить возможность вводить больше данных для создания комментария проекта
	//
	HTTPЗапрос.УстановитьИмяФайлаТела(ПолучитьJSONФайл(ДанныеТела));
	Ответ = HTTPСоединение.ВызватьHTTPМетод("POST",HTTPЗапрос);
	Если ОбработатьОтвет(Ответ) Тогда
		ЧтениеJSON = Новый ЧтениеJSON;
		ЧтениеJSON.УстановитьСтроку(Ответ.ПолучитьТелоКакСтроку(КодировкаТекста.UTF8));
		ДанныеJSON = ПрочитатьJSON(ЧтениеJSON);
		ЧтениеJSON.Закрыть();
		//
		ДанныеСтрока = Новый Структура;
		ДанныеСтрока.Вставить("Содержание",ДанныеJSON.content);
		ДанныеСтрока.Вставить("Идентификатор",ОбработатьИдентификатор(ДанныеJSON.id));
		ДанныеСтрока.Вставить("ДатаВремяСоздания",ДанныеJSON.posted_at);
		ДанныеСтрока.Вставить("ИдентификаторПроекта",ОбработатьИдентификатор(ДанныеJSON.project_id));
		ДанныеСтрока.Вставить("ИдентификаторЗадачи",ОбработатьИдентификатор(ДанныеJSON.task_id));
		//
		ДанныеПривязанныйФайл = Новый Структура;
		Если ДанныеJSON.attachment <> Неопределено Тогда
			ДанныеПривязанныйФайл.Вставить("НазваниеФайла",ДанныеJSON.attachment.file_name);
			ДанныеПривязанныйФайл.Вставить("ТипФайла",ДанныеJSON.attachment.file_type);
			ДанныеПривязанныйФайл.Вставить("СсылкаНаФайл",ДанныеJSON.attachment.file_url);
			ДанныеПривязанныйФайл.Вставить("ТипСодержимого",ДанныеJSON.attachment.resource_type);
		КонецЕсли;
		//
		ДанныеСтрока.Вставить("ПривязанныйФайл",ДанныеПривязанныйФайл);
		Возврат ДанныеСтрока;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
КонецФункции
//
Функция ПолучитьКомментарий(Данные) Экспорт
	Если Данные.ИдентификаторКомментария = "" Тогда
		Возврат Неопределено;
	КонецЕсли;
	//
	HTTPСоединение = ПолучитьСоединение();
	Адрес = "/rest/v2/comments/"+Данные.ИдентификаторКомментария;
	//
	Параметры = Новый Структура;
	//
	HTTPЗапрос = Новый HTTPЗапрос(ВставитьПараметры(Адрес,Параметры),ПолучитьЗаголовки());
	//
	Ответ = HTTPСоединение.ВызватьHTTPМетод("GET",HTTPЗапрос);
	Если ОбработатьОтвет(Ответ) Тогда
		ЧтениеJSON = Новый ЧтениеJSON;
		ЧтениеJSON.УстановитьСтроку(Ответ.ПолучитьТелоКакСтроку(КодировкаТекста.UTF8));
		ДанныеJSON = ПрочитатьJSON(ЧтениеJSON);
		ЧтениеJSON.Закрыть();
		//
		ДанныеСтрока = Новый Структура;
		ДанныеСтрока.Вставить("Содержание",ДанныеJSON.content);
		ДанныеСтрока.Вставить("Идентификатор",ОбработатьИдентификатор(ДанныеJSON.id));
		ДанныеСтрока.Вставить("ДатаВремяСоздания",ДанныеJSON.posted_at);
		ДанныеСтрока.Вставить("ИдентификаторПроекта",ОбработатьИдентификатор(ДанныеJSON.project_id));
		ДанныеСтрока.Вставить("ИдентификаторЗадачи",ОбработатьИдентификатор(ДанныеJSON.task_id));
		//
		ДанныеПривязанныйФайл = Новый Структура;
		Если ДанныеJSON.attachment <> Неопределено Тогда
			ДанныеПривязанныйФайл.Вставить("НазваниеФайла",ДанныеJSON.attachment.file_name);
			ДанныеПривязанныйФайл.Вставить("ТипФайла",ДанныеJSON.attachment.file_type);
			ДанныеПривязанныйФайл.Вставить("СсылкаНаФайл",ДанныеJSON.attachment.file_url);
			ДанныеПривязанныйФайл.Вставить("ТипСодержимого",ДанныеJSON.attachment.resource_type);
		КонецЕсли;
		//
		ДанныеСтрока.Вставить("ПривязанныйФайл",ДанныеПривязанныйФайл);
		Возврат ДанныеСтрока;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
КонецФункции
//
Функция ОбновитьКомментарий(Данные) Экспорт
	Если Данные.ИдентификаторКомментария = "" Тогда
		Возврат Неопределено;
	КонецЕсли;
	//
	HTTPСоединение = ПолучитьСоединение();
	Адрес = "/rest/v2/comments/"+Данные.ИдентификаторКомментария;
	//
	Параметры = Новый Структура;
	//
	HTTPЗапрос = Новый HTTPЗапрос(ВставитьПараметры(Адрес,Параметры),ПолучитьЗаголовки());
	//
	ДанныеТела = Новый Структура;
	ДанныеТела.Вставить("content",Данные.Содержание);
	//
	HTTPЗапрос = Новый HTTPЗапрос(ВставитьПараметры(Адрес,Параметры),ПолучитьЗаголовки());
	HTTPЗапрос.УстановитьИмяФайлаТела(ПолучитьJSONФайл(ДанныеТела));
	//
	Ответ = HTTPСоединение.ВызватьHTTPМетод("POST",HTTPЗапрос);
	Если ОбработатьОтвет(Ответ) Тогда
		ЧтениеJSON = Новый ЧтениеJSON;
		ЧтениеJSON.УстановитьСтроку(Ответ.ПолучитьТелоКакСтроку(КодировкаТекста.UTF8));
		ДанныеJSON = ПрочитатьJSON(ЧтениеJSON);
		ЧтениеJSON.Закрыть();
		//
		ДанныеСтрока = Новый Структура;
		ДанныеСтрока.Вставить("Содержание",ДанныеJSON.content);
		ДанныеСтрока.Вставить("Идентификатор",ОбработатьИдентификатор(ДанныеJSON.id));
		ДанныеСтрока.Вставить("ДатаВремяСоздания",ДанныеJSON.posted_at);
		ДанныеСтрока.Вставить("ИдентификаторПроекта",ОбработатьИдентификатор(ДанныеJSON.project_id));
		ДанныеСтрока.Вставить("ИдентификаторЗадачи",ОбработатьИдентификатор(ДанныеJSON.task_id));
		//
		ДанныеПривязанныйФайл = Новый Структура;
		Если ДанныеJSON.attachment <> Неопределено Тогда
			ДанныеПривязанныйФайл.Вставить("НазваниеФайла",ДанныеJSON.attachment.file_name);
			ДанныеПривязанныйФайл.Вставить("ТипФайла",ДанныеJSON.attachment.file_type);
			ДанныеПривязанныйФайл.Вставить("СсылкаНаФайл",ДанныеJSON.attachment.file_url);
			ДанныеПривязанныйФайл.Вставить("ТипСодержимого",ДанныеJSON.attachment.resource_type);
		КонецЕсли;
		//
		ДанныеСтрока.Вставить("ПривязанныйФайл",ДанныеПривязанныйФайл);
		Возврат ДанныеСтрока;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
КонецФункции
//
Функция УдалитьКомментарий(Данные) Экспорт
	Если Данные.ИдентификаторКомментария = "" Тогда
		Возврат Неопределено;
	КонецЕсли;
	//
	HTTPСоединение = ПолучитьСоединение();
	Адрес = "/rest/v2/comments/"+Данные.ИдентификаторКомментария;
	//
	Параметры = Новый Структура;
	//
	HTTPЗапрос = Новый HTTPЗапрос(ВставитьПараметры(Адрес,Параметры),ПолучитьЗаголовки());
	//
	Ответ = HTTPСоединение.ВызватьHTTPМетод("DELETE",HTTPЗапрос);
	Возврат ОбработатьОтвет(Ответ);
КонецФункции

///Метки
Функция ПолучитьВсеЛичныеМетки() Экспорт
	HTTPСоединение = ПолучитьСоединение();
	Адрес = "/rest/v2/labels";
	//
	Параметры = Новый Структура;
	//
	HTTPЗапрос = Новый HTTPЗапрос(ВставитьПараметры(Адрес,Параметры),ПолучитьЗаголовки());
	Ответ = HTTPСоединение.ВызватьHTTPМетод("GET",HTTPЗапрос);
	Если ОбработатьОтвет(Ответ) Тогда
		ЧтениеJSON = Новый ЧтениеJSON;
		ЧтениеJSON.УстановитьСтроку(Ответ.ПолучитьТелоКакСтроку(КодировкаТекста.UTF8));
		ДанныеJSON = ПрочитатьJSON(ЧтениеJSON);
		ЧтениеJSON.Закрыть();
		//
		ДанныеМассив = Новый Массив;
		Для Каждого Стр Из ДанныеJSON Цикл
			ДанныеСтрока = Новый Структура;
			ДанныеСтрока.Вставить("Идентификатор",ОбработатьИдентификатор(Стр.id));
			ДанныеСтрока.Вставить("Название",Стр.name);
			ДанныеСтрока.Вставить("Цвет",Стр.color);
			ДанныеСтрока.Вставить("ПорядковыйНомер",Стр.order);
			ДанныеСтрока.Вставить("Избранное",Стр.is_favorite);
			ДанныеМассив.Добавить(ДанныеСтрока);
		КонецЦикла;
		//
		Возврат ДанныеМассив;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
КонецФункции
//
Функция СоздатьНовуюЛичнуюМетку(Данные) Экспорт
	Если Данные.Название = "" Тогда
		Возврат Неопределено;
	КонецЕсли;
	//
	HTTPСоединение = ПолучитьСоединение();
	Адрес = "/rest/v2/labels";
	//
	Параметры = Новый Структура;
	//
	ДанныеТела = Новый Структура;
	ДанныеТела.Вставить("name",Данные.Название);
	//TODO: Добавить возможность вводить больше данных для создания личной метки
	//
	HTTPЗапрос = Новый HTTPЗапрос(ВставитьПараметры(Адрес,Параметры),ПолучитьЗаголовки());
	HTTPЗапрос.УстановитьИмяФайлаТела(ПолучитьJSONФайл(ДанныеТела));
	Ответ = HTTPСоединение.ВызватьHTTPМетод("POST",HTTPЗапрос);
	Если ОбработатьОтвет(Ответ) Тогда
		ЧтениеJSON = Новый ЧтениеJSON;
		ЧтениеJSON.УстановитьСтроку(Ответ.ПолучитьТелоКакСтроку(КодировкаТекста.UTF8));
		ДанныеJSON = ПрочитатьJSON(ЧтениеJSON);
		ЧтениеJSON.Закрыть();
		//
		ДанныеМассив = Новый Массив;
		Для Каждого Стр Из ДанныеJSON Цикл
			ДанныеСтрока = Новый Структура;
			ДанныеСтрока.Вставить("Идентификатор",ОбработатьИдентификатор(Стр.id));
			ДанныеСтрока.Вставить("Название",Стр.name);
			ДанныеСтрока.Вставить("Цвет",Стр.color);
			ДанныеСтрока.Вставить("ПорядковыйНомер",Стр.order);
			ДанныеСтрока.Вставить("Избранное",Стр.is_favorite);
			ДанныеМассив.Добавить(ДанныеСтрока);
		КонецЦикла;
		//
		Возврат ДанныеМассив;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
КонецФункции
//
Функция ПолучитьЛичнуюМетку(Данные) Экспорт
	Если Данные.ИдентификаторМетки = "" Тогда
		Возврат Неопределено;
	КонецЕсли;
	//
	HTTPСоединение = ПолучитьСоединение();
	Адрес = "/rest/v2/labels/"+Данные.ИдентификаторМетки;
	//
	Параметры = Новый Структура;
	//
	HTTPЗапрос = Новый HTTPЗапрос(ВставитьПараметры(Адрес,Параметры),ПолучитьЗаголовки());
	Ответ = HTTPСоединение.ВызватьHTTPМетод("GET",HTTPЗапрос);
	Если ОбработатьОтвет(Ответ) Тогда
		ЧтениеJSON = Новый ЧтениеJSON;
		ЧтениеJSON.УстановитьСтроку(Ответ.ПолучитьТелоКакСтроку(КодировкаТекста.UTF8));
		ДанныеJSON = ПрочитатьJSON(ЧтениеJSON);
		ЧтениеJSON.Закрыть();
		//
		ДанныеМассив = Новый Массив;
		Для Каждого Стр Из ДанныеJSON Цикл
			ДанныеСтрока = Новый Структура;
			ДанныеСтрока.Вставить("Идентификатор",ОбработатьИдентификатор(Стр.id));
			ДанныеСтрока.Вставить("Название",Стр.name);
			ДанныеСтрока.Вставить("Цвет",Стр.color);
			ДанныеСтрока.Вставить("ПорядковыйНомер",Стр.order);
			ДанныеСтрока.Вставить("Избранное",Стр.is_favorite);
			ДанныеМассив.Добавить(ДанныеСтрока);
		КонецЦикла;
		//
		Возврат ДанныеМассив;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
КонецФункции
//
Функция ОбновитьЛичнуюМетку(Данные) Экспорт
	Если Данные.ИдентификаторМетки = "" Тогда
		Возврат Неопределено;
	КонецЕсли;
	//
	HTTPСоединение = ПолучитьСоединение();
	Адрес = "/rest/v2/labels/"+Данные.ИдентификаторМетки;
	//
	Параметры = Новый Структура;
	//
	ДанныеТела = Новый Структура;
	ДанныеТела.Вставить("name",Данные.Название);
	//TODO: Добавить возможность вводить больше данных для обновления личной метки
	//
	HTTPЗапрос = Новый HTTPЗапрос(ВставитьПараметры(Адрес,Параметры),ПолучитьЗаголовки());
	HTTPЗапрос.УстановитьИмяФайлаТела(ПолучитьJSONФайл(ДанныеТела));
	//
	Ответ = HTTPСоединение.ВызватьHTTPМетод("POST",HTTPЗапрос);
	Если ОбработатьОтвет(Ответ) Тогда
		ЧтениеJSON = Новый ЧтениеJSON;
		ЧтениеJSON.УстановитьСтроку(Ответ.ПолучитьТелоКакСтроку(КодировкаТекста.UTF8));
		ДанныеJSON = ПрочитатьJSON(ЧтениеJSON);
		ЧтениеJSON.Закрыть();
		//
		ДанныеМассив = Новый Массив;
		Для Каждого Стр Из ДанныеJSON Цикл
			ДанныеСтрока = Новый Структура;
			ДанныеСтрока.Вставить("Идентификатор",ОбработатьИдентификатор(Стр.id));
			ДанныеСтрока.Вставить("Название",Стр.name);
			ДанныеСтрока.Вставить("Цвет",Стр.color);
			ДанныеСтрока.Вставить("ПорядковыйНомер",Стр.order);
			ДанныеСтрока.Вставить("Избранное",Стр.is_favorite);
			ДанныеМассив.Добавить(ДанныеСтрока);
		КонецЦикла;
		//
		Возврат ДанныеМассив;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
КонецФункции
//
Функция УдалитьЛичнуюМетку(Данные) Экспорт
	Если Данные.ИдентификаторМетки = "" Тогда
		Возврат Неопределено;
	КонецЕсли;
	//
	HTTPСоединение = ПолучитьСоединение();
	Адрес = "/rest/v2/labels/"+Данные.ИдентификаторМетки;
	//
	Параметры = Новый Структура;
	//
	HTTPЗапрос = Новый HTTPЗапрос(ВставитьПараметры(Адрес,Параметры),ПолучитьЗаголовки());
	//
	Ответ = HTTPСоединение.ВызватьHTTPМетод("DELETE",HTTPЗапрос);
	Возврат ОбработатьОтвет(Ответ);
КонецФункции
//
Функция ПолучитьВсеОбщиеМетки() Экспорт
	HTTPСоединение = ПолучитьСоединение();
	Адрес = "/rest/v2/labels/shared";
	//
	Параметры = Новый Структура;
	//
	HTTPЗапрос = Новый HTTPЗапрос(ВставитьПараметры(Адрес,Параметры),ПолучитьЗаголовки());
	Ответ = HTTPСоединение.ВызватьHTTPМетод("GET",HTTPЗапрос);
	Если ОбработатьОтвет(Ответ) Тогда
		ЧтениеJSON = Новый ЧтениеJSON;
		ЧтениеJSON.УстановитьСтроку(Ответ.ПолучитьТелоКакСтроку(КодировкаТекста.UTF8));
		ДанныеJSON = ПрочитатьJSON(ЧтениеJSON);
		ЧтениеJSON.Закрыть();
		//
		ДанныеМассив = Новый Массив;
		Для Каждого Стр Из ДанныеJSON Цикл
			ДанныеМассив.Добавить(Стр);
		КонецЦикла;
		//
		Возврат ДанныеМассив;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
КонецФункции
//
Функция ПереименоватьОбщуюМетку(Данные) Экспорт
	Если Данные.Название = "" Тогда
		Возврат Неопределено;
	КонецЕсли;
	//
	HTTPСоединение = ПолучитьСоединение();
	Адрес = "/rest/v2/labels/shared/rename";
	//
	Параметры = Новый Структура;
	//
	ДанныеТела = Новый Структура;
	ДанныеТела.Вставить("name",Данные.Название);
	ДанныеТела.Вставить("new_name",Данные.НовоеНазвание);
	//
	HTTPЗапрос = Новый HTTPЗапрос(ВставитьПараметры(Адрес,Параметры),ПолучитьЗаголовки());
	HTTPЗапрос.УстановитьИмяФайлаТела(ПолучитьJSONФайл(ДанныеТела));
	//
	Ответ = HTTPСоединение.ВызватьHTTPМетод("POST",HTTPЗапрос);
	Возврат ОбработатьОтвет(Ответ);
КонецФункции
//
Функция УдалитьОбщуюМетку(Данные) Экспорт
	Если Данные.Название = "" Тогда
		Возврат Неопределено;
	КонецЕсли;
	//
	HTTPСоединение = ПолучитьСоединение();
	Адрес = "/rest/v2/labels/shared/remove";
	//
	Параметры = Новый Структура;
	//
	ДанныеТела = Новый Структура;
	ДанныеТела.Вставить("name",Данные.Название);
	//
	HTTPЗапрос = Новый HTTPЗапрос(ВставитьПараметры(Адрес,Параметры),ПолучитьЗаголовки());
	HTTPЗапрос.УстановитьИмяФайлаТела(ПолучитьJSONФайл(ДанныеТела));
	//
	Ответ = HTTPСоединение.ВызватьHTTPМетод("POST",HTTPЗапрос);
	Возврат ОбработатьОтвет(Ответ);
КонецФункции

//Другое
//TODO: Получить шаблон данных