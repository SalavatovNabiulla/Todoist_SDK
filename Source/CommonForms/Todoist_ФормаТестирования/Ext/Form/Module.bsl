&НаКлиенте
Процедура ОбновитьПроекты()
	СписокПроектов.Очистить();
	Попытка
		Проекты = Todoist_Клиент.ПолучитьСписокВсехПроектов();
		Для Каждого Проект Из Проекты Цикл
			ТС = СписокПроектов.Добавить();
			ТС.Идентификатор = Проект.Идентификатор;
			ТС.Название = Проект.Название;
			ТС.КоличествоКомментариев = Проект.КоличествоКомментариев;
			ТС.ПорядковыйНомер = Проект.ПорядковыйНомер;
			ТС.Цвет = Проект.Цвет;
			ТС.Общий = Проект.Общий;
			ТС.Избранное = Проект.Избранное;
			ТС.Входящие = Проект.Входящие;
			ТС.ВходящиеКоманды = Проект.ВходящиеКоманды;
			ТС.СпособОтображенияДоска = Проект.СпособОтображенияДоска;
			ТС.Ссылка = Проект.Ссылка;
			ТС.ИдентификаторРодителя = Проект.ИдентификаторРодителя;
		КонецЦикла;
	Исключение
		//
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗадачи()
	СписокЗадач.Очистить();
	Попытка
		ТД = ЭтаФорма.Элементы.СписокПроектов.ТекущиеДанные;
		Фильтр = Todoist_Клиент.ПолучитьСтруктуруФильтра(1);
		Фильтр.ИдентификаторПроекта = ТД.Идентификатор;
		Задачи = Todoist_Клиент.ПолучитьСписокАктивныхЗадач(Фильтр);
		Для Каждого Задача Из Задачи Цикл
			ТС = СписокЗадач.Добавить();
			ТС.ИдентификаторСоздателя = Задача.ИдентификаторСоздателя;
			ТС.ДатаСоздания = Задача.ДатаСоздания;
			ТС.ИдентификаторИсполнителя = Задача.ИдентификаторИсполнителя;
			ТС.ИдентификаторДелегировавшего = Задача.ИдентификаторДелегировавшего;
			ТС.КоличествоКомментариев = Задача.КоличествоКомментариев;
			ТС.Исполнен = Задача.Исполнен;
			ТС.Содержание = Задача.Содержание;
			ТС.Описание = Задача.Описание;
			ТС.ДатаИсполнения = Задача.СрокИсполнения.ДатаИсполнения;
			ТС.Повторяющийся = Задача.СрокИсполнения.Повторяющийся;
			ТС.ДатаВремяСтрокой = Задача.СрокИсполнения.ДатаВремяСтрокой;
			ТС.Время = Задача.СрокИсполнения.Время;
			ТС.ЧасовойПояс = Задача.СрокИсполнения.ЧасовойПояс;
			ТС.Идентификатор = Задача.Идентификатор;
			ТС.Метки = Задача.Метки;
			ТС.ПорядковыйНомер = Задача.ПорядковыйНомер;
			ТС.Приоритет = Задача.Приоритет;
			ТС.ИдентификаторПроекта = Задача.ИдентификаторПроекта;
			ТС.ИдентификаторСекции = Задача.ИдентификаторСекции;
			ТС.ИдентификаторРодителя = Задача.ИдентификаторРодителя;
			ТС.Ссылка = Задача.Ссылка;
		КонецЦикла;
	Исключение
		//
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьКомментарииЗадачи()
	СписокКомментариевЗадачи.Очистить();
	Попытка
		ТД = ЭтаФорма.Элементы.СписокЗадач.ТекущиеДанные;
		Фильтр = Todoist_Клиент.ПолучитьСтруктуруФильтра(2);
		Фильтр.ИдентификаторЗадачи = ТД.Идентификатор;
		Комментарии = Todoist_Клиент.ПолучитьСписокВсехКомментариев(Фильтр);
		Для Каждого Комментарий Из Комментарии Цикл
			ТС = СписокКомментариевЗадачи.Добавить();
			ТС.Содержание = Комментарий.Содержание;
			ТС.Идентификатор = Комментарий.Идентификатор;
			ТС.ДатаВремяСоздания = Комментарий.ДатаВремяСоздания;
			ТС.ИдентификаторПроекта = Комментарий.ИдентификаторПроекта;
			ТС.ИдентификаторЗадачи = Комментарий.ИдентификаторЗадачи;
			ТС.НазваниеФайла = Комментарий.ПривязанныйФайл.НазваниеФайла;
			ТС.ТипФайла = Комментарий.ПривязанныйФайл.ТипФайла;
			ТС.СсылкаНаФайл = Комментарий.ПривязанныйФайл.СсылкаНаФайл;
			ТС.ТипСодержимого = Комментарий.ПривязанныйФайл.ТипСодержимого;
		КонецЦикла;
	Исключение
		//
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьКомментарииПроекта()
	СписокКомментариевПроекта.Очистить();
	Попытка
		ТД = ЭтаФорма.Элементы.СписокПроектов.ТекущиеДанные;
		Фильтр = Todoist_Клиент.ПолучитьСтруктуруФильтра(2);
		Фильтр.ИдентификаторПроекта = ТД.Идентификатор;
		Комментарии = Todoist_Клиент.ПолучитьСписокВсехКомментариев(Фильтр);
		Для Каждого Комментарий Из Комментарии Цикл
			ТС = СписокКомментариевПроекта.Добавить();
			ТС.Содержание = Комментарий.Содержание;
			ТС.Идентификатор = Комментарий.Идентификатор;
			ТС.ДатаВремяСоздания = Комментарий.ДатаВремяСоздания;
			ТС.ИдентификаторПроекта = Комментарий.ИдентификаторПроекта;
			ТС.ИдентификаторЗадачи = Комментарий.ИдентификаторЗадачи;
			ТС.НазваниеФайла = Комментарий.ПривязанныйФайл.НазваниеФайла;
			ТС.ТипФайла = Комментарий.ПривязанныйФайл.ТипФайла;
			ТС.СсылкаНаФайл = Комментарий.ПривязанныйФайл.СсылкаНаФайл;
			ТС.ТипСодержимого = Комментарий.ПривязанныйФайл.ТипСодержимого;
		КонецЦикла;
	Исключение
		//
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ОбновитьПроекты();
КонецПроцедуры

&НаКлиенте
Процедура СписокПроектовПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура СписокПроектовПриАктивизацииСтроки(Элемент)
	ОбновитьЗадачи();
	ОбновитьКомментарииПроекта();
КонецПроцедуры

&НаКлиенте
Процедура СписокЗадачПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура СписокЗадачПриАктивизацииСтроки(Элемент)
	ОбновитьКомментарииЗадачи();
КонецПроцедуры

&НаКлиенте
Процедура СписокКомментариевПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПроект(Команда)
    Оповещение = Новый ОписаниеОповещения("ПослеВводаСтроки",ЭтотОбъект,0);
	ПоказатьВводСтроки(Оповещение,"","Введите название проекта",0,Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ПослеВводаСтроки(Результат, Параметры) Экспорт
	Если Не Результат = Неопределено Тогда
		Если Параметры = 0 Тогда
			Данные = Todoist_Клиент.ПолучитьСтруктуруДанных();
			Данные.Название = Результат;
			Проект = Todoist_Клиент.СоздатьНовыйПроект(Данные);
			ОбновитьПроекты();
		ИначеЕсли Параметры = 1 Тогда
			ТД = ЭтаФорма.Элементы.СписокПроектов.ТекущиеДанные;
			Данные = Todoist_Клиент.ПолучитьСтруктуруДанных();
			Данные.Идентификатор = ТД.Идентификатор;
			Данные.Название = Результат;
			Проект = Todoist_Клиент.ОбновитьПроект(Данные);
			ОбновитьПроекты();
		ИначеЕсли Параметры = 2 Тогда
			ТД = ЭтаФорма.Элементы.СписокПроектов.ТекущиеДанные;
			Данные = Todoist_Клиент.ПолучитьСтруктуруДанных(2);
			Данные.Содержание = Результат;
			Данные.ИдентификаторПроекта = ТД.Идентификатор;
			Задача = Todoist_Клиент.СоздатьНовуюЗадачу(Данные);
			ОбновитьЗадачи();
		ИначеЕсли Параметры = 3 Тогда
			ТД = ЭтаФорма.Элементы.СписокЗадач.ТекущиеДанные;
			Данные = Todoist_Клиент.ПолучитьСтруктуруДанных(2);
			Данные.Идентификатор = ТД.Идентификатор;
			Данные.Содержание = Результат;
			Задача = Todoist_Клиент.ОбновитьЗадачу(Данные);
			ОбновитьЗадачи();
		ИначеЕсли Параметры = 4 Тогда
			ТД = ЭтаФорма.Элементы.СписокПроектов.ТекущиеДанные;
			Данные = Todoist_Клиент.ПолучитьСтруктуруДанных(3);
			Данные.ИдентификаторПроекта = ТД.Идентификатор;
			Данные.Содержание = Результат;
			Комментарий = Todoist_Клиент.СоздатьНовыйКомментарий(Данные);
			ОбновитьКомментарииПроекта();
		ИначеЕсли Параметры = 5 Тогда
			ТД = ЭтаФорма.Элементы.СписокЗадач.ТекущиеДанные;
			Данные = Todoist_Клиент.ПолучитьСтруктуруДанных(3);
			Данные.ИдентификаторЗадачи = ТД.Идентификатор;
			Данные.Содержание = Результат;
			Комментарий = Todoist_Клиент.СоздатьНовыйКомментарий(Данные);
			ОбновитьКомментарииЗадачи();
		ИначеЕсли Параметры = 6 Тогда
			ТД = ЭтаФорма.Элементы.СписокКомментариевПроекта.ТекущиеДанные;
			Данные = Todoist_Клиент.ПолучитьСтруктуруДанных(3);
			Данные.Идентификатор = ТД.Идентификатор;
			Данные.Содержание = Результат;
			Комментарий = Todoist_Клиент.ОбновитьКомментарий(Данные);
			ОбновитьКомментарииПроекта();
		ИначеЕсли Параметры = 7 Тогда
			ТД = ЭтаФорма.Элементы.СписокКомментариевЗадачи.ТекущиеДанные;
			Данные = Todoist_Клиент.ПолучитьСтруктуруДанных(3);
			Данные.Идентификатор = ТД.Идентификатор;
			Данные.Содержание = Результат;
			Комментарий = Todoist_Клиент.ОбновитьКомментарий(Данные);
			ОбновитьКомментарииЗадачи();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура УдалитьПроект(Команда)
	ТД = ЭтаФорма.Элементы.СписокПроектов.ТекущиеДанные;
	Данные = Todoist_Клиент.ПолучитьСтруктуруДанных();
	Данные.Идентификатор = ТД.Идентификатор;
	Результат = Todoist_Клиент.УдалитьПроект(Данные);
	ОбновитьПроекты();
КонецПроцедуры

&НаКлиенте
Процедура ПереименоватьПроект(Команда)
	Оповещение = Новый ОписаниеОповещения("ПослеВводаСтроки",ЭтотОбъект,1);
	ПоказатьВводСтроки(Оповещение,"","Введите новое название проекта",0,Ложь);
КонецПроцедуры

&НаКлиенте
Процедура СоздатьЗадачу(Команда)
	Оповещение = Новый ОписаниеОповещения("ПослеВводаСтроки",ЭтотОбъект,2);
	ПоказатьВводСтроки(Оповещение,"","Введите содержание задачи",0,Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьЗадачу(Команда)
	Оповещение = Новый ОписаниеОповещения("ПослеВводаСтроки",ЭтотОбъект,3);
	ПоказатьВводСтроки(Оповещение,"","Введите новое содержание задачи",0,Ложь);
КонецПроцедуры

&НаКлиенте
Процедура УдалитьЗадачу(Команда)
	ТД = ЭтаФорма.Элементы.СписокЗадач.ТекущиеДанные;
	Данные = Todoist_Клиент.ПолучитьСтруктуруДанных(2);
	Данные.Идентификатор = ТД.Идентификатор;
	Результат = Todoist_Клиент.УдалитьЗадачу(Данные);
	ОбновитьЗадачи();
КонецПроцедуры

&НаКлиенте
Процедура СоздатьКомментарийПроекта(Команда)
	Оповещение = Новый ОписаниеОповещения("ПослеВводаСтроки",ЭтотОбъект,4);
	ПоказатьВводСтроки(Оповещение,"","Введите содержание комментария",0,Ложь);
КонецПроцедуры

&НаКлиенте
Процедура СоздатьКомментарийЗадачи(Команда)
	Оповещение = Новый ОписаниеОповещения("ПослеВводаСтроки",ЭтотОбъект,5);
	ПоказатьВводСтроки(Оповещение,"","Введите содержание комментария",0,Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьКомментарийПроекта(Команда)
	Оповещение = Новый ОписаниеОповещения("ПослеВводаСтроки",ЭтотОбъект,6);
	ПоказатьВводСтроки(Оповещение,"","Введите новое содержание комментария",0,Ложь);
КонецПроцедуры

&НаКлиенте
Процедура УдалитьКомментарийПроекта(Команда)
	ТД = ЭтаФорма.Элементы.СписокКомментариевПроекта.ТекущиеДанные;
	Данные = Todoist_Клиент.ПолучитьСтруктуруДанных(3);
	Данные.Идентификатор = ТД.Идентификатор;
	Результат = Todoist_Клиент.УдалитьКомментарий(Данные);
	ОбновитьКомментарииПроекта();
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьКомментарийЗадачи(Команда)
	Оповещение = Новый ОписаниеОповещения("ПослеВводаСтроки",ЭтотОбъект,7);
	ПоказатьВводСтроки(Оповещение,"","Введите новое содержание комментария",0,Ложь);
КонецПроцедуры

&НаКлиенте
Процедура УдалитьКомментарийЗадачи(Команда)
	ТД = ЭтаФорма.Элементы.СписокКомментариевЗадачи.ТекущиеДанные;
	Данные = Todoist_Клиент.ПолучитьСтруктуруДанных(3);
	Данные.Идентификатор = ТД.Идентификатор;
	Результат = Todoist_Клиент.УдалитьКомментарий(Данные);
	ОбновитьКомментарииЗадачи();
КонецПроцедуры
